% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/step1_node_score.R
\name{apply_node_score_step_1}
\alias{apply_node_score_step_1}
\title{Node-level conditioning set selection and edge pruning (Step 1 of MIIC_search&score)}
\usage{
apply_node_score_step_1(adj, data, hash_table)
}
\arguments{
\item{adj}{A square adjacency matrix in MIIC format:
0 = no edge, 1 = undirected, 2/-2 = directed, 6 = bidirected.}

\item{data}{A data.frame of observations. Each column corresponds to a variable.}

\item{hash_table}{An environment (created with \code{new.env()}) used to cache
previously computed (conditional) mutual information scores.}
}
\value{
A list with the following elements:
\describe{
\item{adj}{The updated adjacency matrix after node score minimization and edge pruning.}
\item{hash_table}{The updated environment containing cached information values.}
}
}
\description{
Implements Step 1 of the MIIC_search&score algorithm for ancestral graphs.
At each node, the function evaluates local conditioning sets among connected nodes
(parents, spouses, and neighbors) using multivariate information scores.
Edges that do not significantly contribute to the node-level score
are marked as non-informative and removed.
}
\details{
The process iterates over all nodes and continues until convergence, i.e., when the
adjacency matrix no longer changes between two consecutive iterations.

This step corresponds to the first phase of the search-and-score algorithm,
which aims at minimizing local contributions to the likelihood score
of each node with respect to its ac-connected neighborhood.
}
\references{
Lagrange, N. and Isambert, H. (2025).
An efficient search-and-score algorithm for ancestral graphs using multivariate information scores.
In \emph{Proceedings of the 42nd International Conference on Machine Learning (ICML 2025)}.
}
\seealso{
\code{\link[=search_best_conditioning_set]{search_best_conditioning_set()}}, \code{\link[=find_all_ancestors]{find_all_ancestors()}}
}
