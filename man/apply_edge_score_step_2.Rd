% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/step2_edge_score.R
\name{apply_edge_score_step_2}
\alias{apply_edge_score_step_2}
\title{Greedy edge orientation (Step 2 of MIIC_search&score)}
\usage{
apply_edge_score_step_2(adj, data, hash_table)
}
\arguments{
\item{adj}{A square adjacency matrix (MIIC-style) with entries in \{2, -2, 6, 1, 0\}.}

\item{data}{A data frame of observed variables (columns) and samples (rows).}

\item{hash_table}{An environment or named list used to cache mutual information computations.}
}
\value{
A list with:
\describe{
\item{adj}{The updated adjacency matrix after greedy edge reorientation.}
\item{hash_table}{The updated hash table of mutual information values.}
}
}
\description{
This function implements \strong{Step 2} of the MIIC_search&score algorithm: a greedy local search
over the current adjacency matrix to optimize edge orientations based on conditional mutual information scores.
At each iteration, the best edge operation \eqn{(X, Y) \rightarrow op} with \eqn{\Delta(X, Y) < 0}
is selected and applied.
}
\details{
The process stops when no more improving move exists or when the graph structure stabilizes
(i.e., no change across iterations).
\subsection{Tabu memory}{

A short-term memory is used to store recent operations and avoid oscillations
(repetitive flipping of the same edges).
}
}
\references{
Lagrange, N. and Isambert, H. (2025).
An efficient search-and-score algorithm for ancestral graphs using multivariate information scores.
In \emph{Proceedings of the 42nd International Conference on Machine Learning (ICML 2025)}.
}
\seealso{
\code{\link[=compute_edge_deltas]{compute_edge_deltas()}}
}
