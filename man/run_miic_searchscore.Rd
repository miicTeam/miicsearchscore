% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_miic_searchscore.R
\name{run_miic_searchscore}
\alias{run_miic_searchscore}
\title{MIIC_search&score pipeline for ancestral graph discovery}
\usage{
run_miic_searchscore(data, n_threads = 1)
}
\arguments{
\item{data}{A data.frame containing observational data. Each column is a variable.}

\item{n_threads}{Integer indicating the number of threads to use in the initial MIIC call.}
}
\value{
A square adjacency matrix in MIIC format:
\describe{
\item{0}{No edge}
\item{1}{Undirected edge}
\item{2/-2}{Directed edge (2 = parent, -2 = child)}
\item{6}{Bidirected edge (latent confounding)}
}
}
\description{
This function executes the complete two-step \strong{MIIC_search&score} pipeline
on a given dataset. It starts from the initial adjacency matrix learned by
MIIC with latent orientation and applies:
\enumerate{
\item Node-level edge pruning via local conditioning set optimization.
\item Greedy edge orientation via mutual information deltas.
}
}
\details{
The method builds a cache of multivariate information values to avoid redundant
computations across both steps. It returns the final adjacency matrix representing
the inferred ancestral graph.
}
\references{
Lagrange, N. and Isambert, H. (2025).
An efficient search-and-score algorithm for ancestral graphs using multivariate information scores.
In \emph{Proceedings of the 42nd International Conference on Machine Learning (ICML 2025)}.
}
\seealso{
\code{\link[=apply_node_score_step_1]{apply_node_score_step_1()}}, \code{\link[=apply_edge_score_step_2]{apply_edge_score_step_2()}}, \code{\link[=miic]{miic()}}
}
